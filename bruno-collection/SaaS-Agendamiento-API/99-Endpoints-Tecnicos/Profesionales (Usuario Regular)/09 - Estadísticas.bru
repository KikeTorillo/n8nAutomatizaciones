meta {
  name: 09 - Estad√≠sticas
  type: http
  seq: 9
}

get {
  url: {{baseUrl}}/api/{{apiVersion}}/profesionales/estadisticas
  body: none
  auth: bearer
}

headers {
  Content-Type: application/json
}

auth:bearer {
  token: {{accessToken}}
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Response should contain statistics", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('estadisticas');
    const stats = body.data.estadisticas;
    expect(stats).to.be.an('object');
  });

  test("Statistics should include professional counts", function() {
    const body = res.getBody();
    const stats = body.data.estadisticas;
    expect(stats).to.have.property('total_profesionales');
    expect(stats).to.have.property('profesionales_activos');
    expect(stats).to.have.property('profesionales_disponibles_online');
  });

  test("Statistics should be scoped to user's organization", function() {
    const body = res.getBody();
    const stats = body.data.estadisticas;
    // Statistics should only reflect data from user's organization
    // This validates multi-tenant isolation
    expect(stats.total_profesionales).to.be.a('number');
    expect(stats.total_profesionales).to.be.at.least(0);
  });

  test("Statistics should include breakdown by type if available", function() {
    const body = res.getBody();
    const stats = body.data.estadisticas;
    if (stats.por_tipo_profesional) {
      expect(stats.por_tipo_profesional).to.be.an('object');
    }
  });
}