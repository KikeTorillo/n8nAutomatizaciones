meta {
  name: Walk-In Cliente Existente
  type: http
  seq: 7
}

post {
  url: {{baseUrl}}/api/{{apiVersion}}/citas/walk-in
  body: json
  auth: bearer
}

auth:bearer {
  token: {{token}}
}

body:json {
  {
    "cliente_id": {{clienteId}},
    "profesional_id": {{profesionalId}},
    "servicio_id": {{servicioId}},
    "tiempo_espera_aceptado": 0,
    "notas_walk_in": "Cliente recurrente con cita walk-in"
  }
}

tests {
  test("Status 201", function() {
    expect(res.status).to.equal(201);
  });

  test("Cliente es el esperado", function() {
    expect(res.body.data.cliente_id).to.equal(parseInt(bru.getEnvVar("clienteId")));
  });

  test("Profesional es el especificado", function() {
    expect(res.body.data.profesional_id).to.equal(parseInt(bru.getEnvVar("profesionalId")));
  });

  test("Estado es confirmada", function() {
    expect(res.body.data.estado).to.equal('confirmada');
  });

  test("Origen es presencial", function() {
    expect(res.body.data.origen_cita).to.equal('presencial');
  });
}

docs {
  # Walk-In con Cliente Existente

  Variante rápida para clientes recurrentes que llegan sin cita previa.

  ## Escenario:
  Cliente habitual que ya está registrado en el sistema llega sin cita previa.
  Requiere atención inmediata con un profesional específico.

  ## Campos Requeridos:
  - `cliente_id` (cliente ya registrado)
  - `servicio_id`
  - Opcionalmente `profesional_id` (si no se envía, se auto-asigna)

  ## Ejemplo sin profesional específico:
  ```json
  {
    "cliente_id": 5,
    "servicio_id": 1,
    "tiempo_espera_aceptado": 10,
    "notas_walk_in": "Cliente habitual, sin preferencia de profesional"
  }
  ```

  En este caso, el sistema auto-asignará el primer profesional disponible.

  ## Ventajas:
  - ✅ Rápido (cliente ya registrado)
  - ✅ Historial de citas disponible
  - ✅ Datos completos (email, preferencias, etc.)
  - ✅ Permite auto-asignación o especificar profesional
}
