# =========================================
# Nginx VPS - Producción con Subdominios
# n8nflowautomat.com
# =========================================
# Arquitectura Profesional:
#   - n8nflowautomat.com       → Frontend (React SPA)
#   - api.n8nflowautomat.com   → Backend (Express API)
#   - n8n.n8nflowautomat.com   → n8n (Workflows - Privado)
# =========================================

# =========================================
# 1. FRONTEND - n8nflowautomat.com
# =========================================

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name n8nflowautomat.com;

    # Certbot challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS
server {
    listen 443 ssl http2;
    server_name n8nflowautomat.com;

    # SSL (wildcard certificate)
    ssl_certificate /etc/letsencrypt/live/n8nflowautomat.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/n8nflowautomat.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Logging
    access_log /var/log/nginx/frontend-access.log;
    error_log /var/log/nginx/frontend-error.log warn;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    client_max_body_size 10M;

    # Webhooks de n8n (DEBE ir ANTES de location /)
    # Telegram bots llaman a: https://n8nflowautomat.com/webhook/abc123
    location /webhook/ {
        proxy_pass http://localhost:5678;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
    }

    # Frontend React SPA (contenedor Docker puerto 8080)
    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Assets estáticos con cache agresivo
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:8080;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Health check
    location /health {
        proxy_pass http://localhost:8080/health;
        access_log off;
    }
}

# =========================================
# 2. BACKEND API - api.n8nflowautomat.com
# =========================================

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name api.n8nflowautomat.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS
server {
    listen 443 ssl http2;
    server_name api.n8nflowautomat.com;

    # SSL (wildcard certificate)
    ssl_certificate /etc/letsencrypt/live/n8nflowautomat.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/n8nflowautomat.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Logging
    access_log /var/log/nginx/api-access.log;
    error_log /var/log/nginx/api-error.log warn;

    # Security Headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000" always;

    client_max_body_size 50M;

    # Rate Limiting (protección contra abusos)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req zone=api_limit burst=20 nodelay;

    # Backend API (contenedor Docker puerto 3000)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
    }

    # Health check
    location /health {
        proxy_pass http://localhost:3000/health;
        access_log off;
        limit_req off;  # No rate limit en health checks
    }
}

# =========================================
# 3. N8N - n8n.n8nflowautomat.com (PRIVADO)
# =========================================

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name n8n.n8nflowautomat.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS
server {
    listen 443 ssl http2;
    server_name n8n.n8nflowautomat.com;

    # SSL (wildcard certificate)
    ssl_certificate /etc/letsencrypt/live/n8nflowautomat.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/n8nflowautomat.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Logging
    access_log /var/log/nginx/n8n-access.log;
    error_log /var/log/nginx/n8n-error.log warn;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000" always;

    client_max_body_size 50M;

    # ⚠️ RESTRINGIR ACCESO - Solo tu IP (Seguridad)
    # Descomenta y cambia por tu IP real:
    # allow 190.85.xxx.xxx;  # Tu IP de casa/oficina
    # allow 192.168.1.0/24;  # Red local (opcional)
    # deny all;

    # n8n UI (contenedor Docker puerto 5678)
    location / {
        proxy_pass http://localhost:5678;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (necesario para n8n UI)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts largos (ejecuciones de workflows pueden tardar)
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }

    # Health check
    location /healthz {
        proxy_pass http://localhost:5678/healthz;
        access_log off;
    }
}

# =========================================
# SECURITY GLOBAL
# =========================================

# Denegar acceso a archivos ocultos en todos los dominios
map $request_uri $deny_hidden {
    ~^/\. 1;
    default 0;
}

# Denegar acceso a archivos sensibles
map $request_uri $deny_sensitive {
    ~*\.(env|log|sql|git|md|bak|old|tmp)$ 1;
    default 0;
}
