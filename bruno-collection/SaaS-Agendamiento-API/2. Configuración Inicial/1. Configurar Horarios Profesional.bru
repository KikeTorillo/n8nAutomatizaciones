meta {
  name: 1. Configurar Horarios Profesional
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/api/{{apiVersion}}/horarios
  body: json
  auth: bearer
}

auth:bearer {
  token: {{token}}
}

body:json {
  {
    "profesional_id": {{profesionalId}},
    "fecha": "2025-10-15",
    "hora_inicio": "09:00:00",
    "hora_fin": "18:00:00",
    "duracion_slot": 30,
    "tipo_horario": "franja_especifica",
    "notas": "Horario inicial de atención"
  }
}

tests {
  test("Status 201 Created", function() {
    expect(res.status).to.equal(201);
  });

  test("Response contiene horario creado", function() {
    expect(res.body.data).to.have.property("id");
    expect(res.body.data.profesional_id).to.equal(parseInt(bru.getEnvVar("profesionalId")));
  });

  test("Trigger generó slots disponibles", function() {
    expect(res.body.data).to.have.property("fecha");
  });
}

docs {
  # Paso 1: Configurar Horarios del Profesional

  Después del onboarding, configuramos el horario de atención del profesional creado.

  ## Campos requeridos:
  - `profesional_id`: ID del profesional (guardado del onboarding)
  - `fecha`: Fecha específica (formato YYYY-MM-DD)
  - `hora_inicio`: Hora de inicio de atención
  - `hora_fin`: Hora de fin de atención
  - `duracion_slot`: Duración de cada slot en minutos (ej: 30, 45, 60)
  - `tipo_horario`: "franja_especifica" para un día específico

  ## Nota:
  - ⚠️ Actualizar la `fecha` a una fecha futura
  - El sistema genera automáticamente slots de 30 minutos
  - Para horarios recurrentes (lunes a viernes), usar tipo "regular"

  ## Ejemplo de horarios recurrentes:
  ```json
  {
    "tipo_horario": "regular",
    "es_recurrente": true,
    "dias_semana": [1, 2, 3, 4, 5],
    "fecha_inicio_recurrencia": "2025-10-15",
    "fecha_fin_recurrencia": "2025-12-31"
  }
  ```
}
