meta {
  name: 03 - Verificar Plantillas Servicios
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/api/v1/organizaciones/plantillas-servicios
  body: none
  auth: bearer
}

auth:bearer {
  token: {{adminToken}}
}

headers {
  Content-Type: application/json
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Should have plantillas servicios disponibles", function() {
    const body = res.getBody();
    expect(body.data).to.be.an('array');
    expect(body.data.length).to.be.greaterThan(0);
  });

  test("Verificar plantillas por industria", function() {
    const body = res.getBody();
    const plantillas = body.data;

    // Verificar que existen plantillas para las industrias principales
    const industriasEsperadas = ['barberia', 'spa', 'consultorio_medico'];

    industriasEsperadas.forEach(industria => {
      const plantillasIndustria = plantillas.filter(p => p.industria === industria);
      expect(plantillasIndustria.length).to.be.greaterThan(0, `Deben existir plantillas para ${industria}`);
    });

    console.log(`âœ… Total plantillas disponibles: ${plantillas.length}`);

    // Contar por industria
    const conteoIndustrias = {};
    plantillas.forEach(p => {
      conteoIndustrias[p.industria] = (conteoIndustrias[p.industria] || 0) + 1;
    });

    console.log("ðŸ“Š Plantillas por industria:");
    Object.entries(conteoIndustrias).forEach(([industria, count]) => {
      console.log(`  ${industria}: ${count} servicios`);
    });
  });

  test("Verificar estructura de plantillas", function() {
    const body = res.getBody();
    const plantillas = body.data;

    if (plantillas.length > 0) {
      const plantilla = plantillas[0];
      expect(plantilla).to.have.property('id');
      expect(plantilla).to.have.property('nombre');
      expect(plantilla).to.have.property('descripcion');
      expect(plantilla).to.have.property('industria');
      expect(plantilla).to.have.property('duracion_minutos');
      expect(plantilla).to.have.property('precio_base');
    }
  });

  test("Sistema multi-tenant operativo", function() {
    // Si llegamos aquÃ­, el sistema estÃ¡ funcionando correctamente
    console.log("âœ… Sistema multi-tenant SaaS operativo");
    console.log("âœ… Base de datos PostgreSQL conectada");
    console.log("âœ… Plantillas de servicios cargadas");
    console.log("âœ… AutenticaciÃ³n JWT funcionando");
  });
}