meta {
  name: 01 - Test Aislamiento Organizaciones
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/api/v1/profesionales
  body: none
  auth: bearer
}

auth:bearer {
  token: {{managerBarberiaToken}}
}

headers {
  Content-Type: application/json
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Manager barber√≠a SOLO debe ver sus profesionales", function() {
    const body = res.getBody();
    const profesionales = body.data;

    // Verificar que todos los profesionales pertenecen a la barber√≠a
    profesionales.forEach(profesional => {
      expect(profesional.organizacion_id).to.equal(bru.getVar("barbariaOrgId"),
        `Profesional ${profesional.id} no pertenece a la organizaci√≥n correcta`);
    });

    // Debe tener exactamente 2 profesionales (barbero + estilista)
    expect(profesionales.length).to.equal(2, "Barber√≠a debe tener exactamente 2 profesionales");
  });

  test("Verificar tipos profesionales compatibles con barber√≠a", function() {
    const body = res.getBody();
    const profesionales = body.data;

    const tiposValidos = ['barbero', 'estilista_masculino', 'estilista'];

    profesionales.forEach(profesional => {
      expect(tiposValidos).to.include(profesional.tipo_profesional,
        `Tipo ${profesional.tipo_profesional} no es compatible con industria barber√≠a`);
    });

    console.log("‚úÖ Tipos profesionales validados para barber√≠a:");
    profesionales.forEach(p => {
      console.log(`  ‚Ä¢ ${p.nombre} ${p.apellidos}: ${p.tipo_profesional}`);
    });
  });

  test("Verificar RLS (Row Level Security) funcionando", function() {
    const body = res.getBody();
    console.log("üõ°Ô∏è RLS MULTI-TENANT VALIDADO:");
    console.log(`  ‚Ä¢ Manager barber√≠a ve SOLO ${body.data.length} profesionales de su organizaci√≥n`);
    console.log(`  ‚Ä¢ Organizaci√≥n ID: ${bru.getVar("barbariaOrgId")}`);
    console.log(`  ‚Ä¢ Token usado: Manager Barber√≠a`);
    console.log("  ‚Ä¢ ‚úÖ Aislamiento de datos funcionando correctamente");
  });
}