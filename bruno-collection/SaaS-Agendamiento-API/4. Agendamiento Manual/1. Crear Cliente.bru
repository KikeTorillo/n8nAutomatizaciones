meta {
  name: Crear Cliente
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/api/{{apiVersion}}/clientes
  body: json
  auth: bearer
}

auth:bearer {
  token: {{token}}
}

body:json {
  {
    "nombre": "Juan Pérez",
    "telefono": "+5491112345678",
    "email": "juan.perez@example.com",
    "notas": "Cliente frecuente, prefiere turnos por la mañana"
  }
}

tests {
  test("Status 201 - Cliente creado exitosamente", function() {
    expect(res.status).to.equal(201);
  });

  test("Respuesta contiene ID del cliente", function() {
    expect(res.body.data).to.have.property('id');
    expect(res.body.data).to.have.property('nombre');
    expect(res.body.data).to.have.property('telefono');
  });

  // Guardar clienteId en variable de entorno
  if (res.status === 201) {
    bru.setEnvVar("clienteId", res.body.data.id);
  }
}

docs {
  # Crear Cliente

  Registra un nuevo cliente en el sistema para poder agendar citas.

  ## Body Parameters:
  - `nombre` (string, required) - Nombre completo del cliente
  - `telefono` (string, required) - Teléfono de contacto (formato internacional)
  - `email` (string, optional) - Email del cliente
  - `notas` (string, optional) - Notas internas sobre el cliente

  ## Respuesta Exitosa:
  ```json
  {
    "success": true,
    "data": {
      "id": 1,
      "nombre": "Juan Pérez",
      "telefono": "+5491112345678",
      "email": "juan.perez@example.com",
      "notas": "Cliente frecuente, prefiere turnos por la mañana",
      "organizacion_id": 1,
      "created_at": "2025-10-08T10:30:00Z"
    }
  }
  ```

  ## Validaciones:
  - Teléfono único por organización
  - Email único si se proporciona
  - RLS automático: cliente asociado a la organización del usuario autenticado
}
