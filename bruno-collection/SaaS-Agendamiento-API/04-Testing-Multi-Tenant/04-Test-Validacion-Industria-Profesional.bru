meta {
  name: 04 - Test Validaci√≥n Industria-Profesional
  type: http
  seq: 4
}

post {
  url: {{baseUrl}}/api/v1/profesionales
  body: json
  auth: bearer
}

auth:bearer {
  token: {{managerBarberiaToken}}
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "nombre": "Dr. Juan",
    "apellidos": "M√©dico Especialista",
    "email": "doctor@barbariaelclasico.com",
    "telefono": "+573101111111",
    "tipo_profesional": "doctor_general",
    "especialidades": ["medicina_general"],
    "horarios_disponibles": {
      "lunes": {"inicio": "08:00", "fin": "17:00"}
    }
  }
}

tests {
  test("Should return validation error", function() {
    expect(res.getStatus()).to.equal(400);
  });

  test("Response should contain success false", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', false);
  });

  test("Should validate doctor_general incompatible with barber√≠a", function() {
    const body = res.getBody();
    expect(body).to.have.property('error');

    // El error debe indicar incompatibilidad
    const errorMsg = body.error.toLowerCase();
    const hasValidationError = errorMsg.includes('compatible') ||
                              errorMsg.includes('v√°lido') ||
                              errorMsg.includes('industria') ||
                              errorMsg.includes('profesional');

    expect(hasValidationError).to.be.true("Error debe indicar incompatibilidad industria-profesional");
  });

  test("Sistema de validaci√≥n autom√°tica funcionando", function() {
    const body = res.getBody();
    console.log("‚ö†Ô∏è VALIDACI√ìN INDUSTRIA-PROFESIONAL:");
    console.log("  ‚Ä¢ Intento: Crear doctor_general en barber√≠a");
    console.log("  ‚Ä¢ Resultado: ‚ùå RECHAZADO correctamente");
    console.log(`  ‚Ä¢ Error: ${body.error}`);
    console.log("  ‚Ä¢ ‚úÖ Sistema previene combinaciones inv√°lidas");

    console.log("\nüìã PROFESIONALES V√ÅLIDOS PARA BARBER√çA:");
    console.log("  ‚Ä¢ barbero ‚úÖ");
    console.log("  ‚Ä¢ estilista_masculino ‚úÖ");
    console.log("  ‚Ä¢ estilista ‚úÖ");

    console.log("\n‚ùå PROFESIONALES INV√ÅLIDOS PARA BARBER√çA:");
    console.log("  ‚Ä¢ doctor_general ‚ùå");
    console.log("  ‚Ä¢ masajista ‚ùå");
    console.log("  ‚Ä¢ enfermero ‚ùå");
    console.log("  ‚Ä¢ recepcionista_medica ‚ùå");
  });
}