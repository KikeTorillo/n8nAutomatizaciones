meta {
  name: 10 - Test Paginaci√≥n
  type: http
  seq: 10
}

get {
  url: {{baseUrl}}/api/v1/organizaciones
  body: none
  auth: bearer
}

auth:bearer {
  token: {{accessToken}}
}

headers {
  Content-Type: application/json
}

params:query {
  page: 1
  limit: 1
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Should respect limit parameter", function() {
    const body = res.getBody();
    expect(body.data.data.length).to.be.at.most(1);
  });

  test("Pagination info should be correct", function() {
    const body = res.getBody();
    const pagination = body.data.pagination;
    
    expect(pagination.page).to.equal(1);
    expect(pagination.limit).to.equal(1);
    expect(pagination).to.have.property('total');
    expect(pagination).to.have.property('totalPages');
    expect(pagination).to.have.property('hasNext');
    expect(pagination).to.have.property('hasPrev');
    
    expect(pagination.hasPrev).to.equal(false);
  });

  test("Should calculate totalPages correctly", function() {
    const body = res.getBody();
    const pagination = body.data.pagination;
    
    const expectedPages = Math.ceil(pagination.total / pagination.limit);
    expect(pagination.totalPages).to.equal(expectedPages);
  });
}