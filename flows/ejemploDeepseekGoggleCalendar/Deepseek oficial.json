{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "20a0b009-eb9b-44fc-bda9-4dffd8085f04",
              "name": "sender",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "2763de37-d1d4-4564-9980-eeb091c9afd6",
              "name": "messageType",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "6076cf73-bc7d-41d6-b053-c09611925c31",
              "name": "conversation",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "f7e32389-50f8-4633-913c-6f233ff7656e",
              "name": "sessionId",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        0
      ],
      "id": "c27284e4-70a8-48a2-9ca4-784e316efe41",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://evolution_api:8080/message/sendText/{{ $('Webhook1').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "TuClaveAPIEvolution123!"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.sender.split('@')[0] }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        912,
        0
      ],
      "id": "46da8b5a-560b-49e2-94d0-d63536a78617",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.conversation }}",
        "options": {
          "systemMessage": "=Eres un asistente llamado JARVIS que interpreta mensajes recibidos por WhatsApp para gestionar citas en Google Calendar.\n\nFECHA Y HORA ACTUAL: {{ $now }}\nZONA HORARIA: America/Mexico_City (UTC-6)\n\nTu trabajo es entender lo que el usuario necesita y extraer TODOS los datos temporales correctamente. Solo gestionas citas. No respondes preguntas generales.\n\nYa tienes acceso a Google Calendar mediante n8n.  \n\n=== IMPORTANTE PARA AGENDA_CITA ===\nCuando el usuario quiera agendar una cita:\n1. Extrae TODOS los datos del mensaje\n2. Convierte fechas/horas al formato ISO 8601 con zona horaria\n3. Devuelve EXACTAMENTE estos datos:\n   - summary: [título del evento]\n   - startTime: YYYY-MM-DDTHH:MM:SS-06:00\n   - endTime: YYYY-MM-DDTHH:MM:SS-06:00\n   - description: [opcional]\n\n4. n8n verificará automáticamente la disponibilidad y agendará\n5. NO uses herramientas - deja que n8n maneje todo  \n\nIMPORTANTE - FORMATO DE FECHAS Y HORAS:\nIncluye siempre estos datos si están disponibles en el mensaje del usuario:\n- Título del evento (summary)\n- Fecha y hora de inicio (startTime) - DEBE ser formato ISO 8601 con zona horaria: YYYY-MM-DDTHH:MM:SS-06:00\n- Fecha y hora de finalización (endTime) - DEBE ser formato ISO 8601 con zona horaria: YYYY-MM-DDTHH:MM:SS-06:00\n- Descripción (opcional)\n\nEJEMPLOS DE FORMATO CORRECTO:\n- Hoy a las 3:30 PM = 2024-03-15T15:30:00-06:00\n- Mañana a las 10:00 AM = 2024-03-16T10:00:00-06:00  \n- Próximo lunes a las 2:00 PM = 2024-03-18T14:00:00-06:00\n\nn8n usará esa acción para llamar a Google Calendar automáticamente.\n\nFUNCIONALIDAD ACTUAL:\n- agenda_cita: cuando el usuario quiere agendar una cita nueva\n\nEjemplos de mensajes válidos:\n- \"Agenda una reunión con Laura mañana a las 4\"\n- \"Quiero una cita el próximo lunes a las 2pm\"\n- \"Programa una llamada hoy a las 10:30am\"\n- \"Agenda presentación del proyecto el viernes a las 3:30pm\"\n\nFLUJO OBLIGATORIO DE RESPUESTA:\n1. Identifica si el usuario quiere agendar una cita\n2. Extrae todos los datos necesarios (fecha, hora, título, etc.)\n3. Convierte fechas/horas al formato ISO correcto\n4. NO uses herramientas - n8n manejará la validación automáticamente\n5. Responde únicamente: \"Verificando disponibilidad para [título] el [día] a las [hora]...\"\n\nPuedes analizar los 2 mensajes anteriores del usuario para tener más contexto.\n\nTu respuesta debe ser en lenguaje natural, clara y breve, como si estuvieras escribiendo por WhatsApp. Usa emojis si es apropiado.\n\nExtrae toda la información posible del mensaje: título, fecha, hora, duración. Si algún dato importante no está claro, pregúntalo amablemente antes de proceder con el agendado.\n\nESTRUCTURA DE RESPUESTA REQUERIDA:\n\nPara agenda_cita:\n1. PRIMERO extrae y valida todos los datos (título, startTime, endTime)\n2. Convierte fechas/horas al formato ISO 8601 exacto\n3. NO uses herramientas - n8n manejará la validación y agendado automáticamente\n4. Responde únicamente: \"Verificando disponibilidad para [título] el [día] a las [hora]...\"\n\nPara mensajes que NO sean para agendar citas:\n- Responde amablemente: \"Solo puedo ayudarte a agendar citas en tu calendario. ¿Quieres programar alguna reunión? 📅\"\n\nSi el mensaje es ambiguo o falta información importante (hora, fecha, o título), pide amablemente los detalles faltantes antes de proceder.\n\nREGLAS TEMPORALES ESTRICTAS:\n1. \"mañana\" = día siguiente a la fecha actual\n2. \"hoy\" = fecha actual  \n3. \"próximo [día de la semana]\" = primer [día] después de hoy\n4. \"dentro de X días\" = X días después de la fecha actual\n5. \"el mes que viene\" = mismo día del mes siguiente\n6. \"este [día] por la tarde\" = si ya pasó esta semana, se refiere al próximo\n7. Si NO se especifica hora exacta, usar 09:00:00-06:00 por defecto\n8. Si NO se especifica duración, asumir exactamente 1 hora\n9. SIEMPRE calcular endTime = startTime + duración\n\nEJEMPLOS DE CÁLCULO TEMPORAL:\n- \"mañana a las 10am\" = [fecha actual + 1 día]T10:00:00-06:00\n- \"el próximo lunes a las 2pm\" = [primer lunes después de hoy]T14:00:00-06:00  \n- \"dentro de 5 días\" = [fecha actual + 5 días]T09:00:00-06:00\n- \"hoy a las 4:30 de la tarde\" = [fecha actual]T16:30:00-06:00\n\nVALIDACIÓN FINAL:\nAntes de enviar datos de agenda_cita, verifica que:\n1. startTime tenga formato: YYYY-MM-DDTHH:MM:SS-06:00\n2. endTime tenga formato: YYYY-MM-DDTHH:MM:SS-06:00\n3. La fecha calculada sea lógica y correcta\n4. La duración entre startTime y endTime sea coherente\n\nTu respuesta debe ser en lenguaje natural, clara y breve, como WhatsApp. Usa emojis apropiados.\n\nSi algún dato importante no está claro, pregúntalo amablemente antes de proceder.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        512,
        0
      ],
      "id": "b617b412-1d60-4c50-b29a-001b70ba9cff",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        432,
        224
      ],
      "id": "26bab2f4-70a1-46a1-883b-ddc2d3fccb90",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "6BgzmyrvVr2C397H",
          "name": "api kike test"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "arellanestorillo@gmail.com",
          "mode": "list",
          "cachedResultName": "arellanestorillo@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        720,
        224
      ],
      "id": "45328672-e2e4-4c1b-8719-0e5b7e2129f8",
      "name": "agenda_cita",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "qhz5fCA8VRYFTnw9",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5bc80ec5-b2db-40fe-92b3-67697c82d03a",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "cf1284b1-58b9-4774-a7d4-c32f443836b0",
      "name": "Webhook1",
      "webhookId": "5bc80ec5-b2db-40fe-92b3-67697c82d03a"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        576,
        224
      ],
      "id": "105f14b6-40ad-47a4-a572-1985a2ff1dac",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "VGgbpufXEhyB2GX1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "arellanestorillo@gmail.com",
          "mode": "list",
          "cachedResultName": "arellanestorillo@gmail.com"
        },
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_Time', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_Time', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        864,
        224
      ],
      "id": "fa7a728e-70ba-449a-9067-e37d85b25b6d",
      "name": "ver_disponibilidad",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "qhz5fCA8VRYFTnw9",
          "name": "Google Calendar account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "agenda_cita": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "ver_disponibilidad": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1852dfc6-d017-472a-add3-75ddb5e97a81",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ac43b0cd8b018ef9b661597148f6b0e3078ff4d9fa38c0b7ffc59b29b6c61e4c"
  },
  "id": "3MaVuvoiFUqGTuWn",
  "tags": []
}