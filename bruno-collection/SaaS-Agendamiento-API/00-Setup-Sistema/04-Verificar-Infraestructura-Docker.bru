meta {
  name: 04 - Verificar Infraestructura Docker
  type: http
  seq: 4
}

get {
  url: {{baseUrl}}/api/v1/test/health-check
  body: none
  auth: bearer
}

auth:bearer {
  token: {{adminToken}}
}

headers {
  Content-Type: application/json
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Database connection should be healthy", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('database');
    expect(body.data.database).to.have.property('status', 'connected');
  });

  test("Redis connection should be healthy", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('redis');
    expect(body.data.redis).to.have.property('status', 'connected');
  });

  test("System uptime should be available", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('uptime');
    expect(body.data.uptime).to.be.a('number');
  });

  test("Memory usage should be monitored", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('memory');
    expect(body.data.memory).to.have.property('used');
    expect(body.data.memory).to.have.property('total');
  });

  test("Infraestructura Docker completamente operativa", function() {
    const body = res.getBody();

    console.log("üê≥ Estado Infraestructura Docker:");
    console.log("‚úÖ Backend Node.js: Operativo");
    console.log(`‚úÖ PostgreSQL: ${body.data.database.status}`);
    console.log(`‚úÖ Redis: ${body.data.redis.status}`);
    console.log(`‚úÖ Uptime: ${Math.round(body.data.uptime)}s`);
    console.log(`‚úÖ Memoria: ${Math.round(body.data.memory.used / 1024 / 1024)}MB / ${Math.round(body.data.memory.total / 1024 / 1024)}MB`);

    console.log("\nüéØ Servicios Docker Activos:");
    console.log("  ‚Ä¢ postgres_db (puerto 5432)");
    console.log("  ‚Ä¢ n8n-redis (puerto 6379)");
    console.log("  ‚Ä¢ n8n-main (puerto 5678)");
    console.log("  ‚Ä¢ n8n-worker");
    console.log("  ‚Ä¢ evolution_api (puerto 8000)");
    console.log("  ‚Ä¢ pgadmin (puerto 8001)");
    console.log("  ‚Ä¢ backend (puerto 3000)");

    console.log("\n‚úÖ Sistema SaaS Multi-Tenant Enterprise Ready");
  });
}