meta {
  name: 06 - Estad√≠sticas Clientes
  type: http
  seq: 6
}

get {
  url: {{baseUrl}}/api/{{apiVersion}}/clientes/estadisticas?organizacion_id={{organizacionId}}
  body: none
  auth: bearer
}

params:query {
  organizacion_id: {{organizacionId}}
}

headers {
  Content-Type: application/json
}

auth:bearer {
  token: {{accessToken}}
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Should include basic statistics", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('total_clientes');
    expect(body.data).to.have.property('clientes_activos');
    expect(body.data).to.have.property('nuevos_este_mes');
  });

  test("Should include demographic data", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('por_frecuencia_visitas');
    expect(body.data).to.have.property('por_horario_preferido');
    expect(body.data).to.have.property('por_como_conocio');
  });

  test("Should include client retention metrics", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('retention_rate');
    expect(body.data).to.have.property('promedio_tiempo_cliente');
  });

  test("Should include top services data", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('servicios_mas_populares');
    expect(body.data.servicios_mas_populares).to.be.an('array');
  });

  test("Statistics should be organization-specific", function() {
    const body = res.getBody();
    // Stats should only reflect clients from the authenticated user's organization
    expect(body.data.total_clientes).to.be.a('number');
    expect(body.data.total_clientes).to.be.at.least(0);
  });
}