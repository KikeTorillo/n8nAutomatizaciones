-- ====================================================================
-- üìö TABLAS CAT√ÅLOGO DEL SISTEMA
-- ====================================================================
--
-- Este archivo contiene tablas cat√°logo din√°micas que reemplazan ENUMs
-- est√°ticos para mayor flexibilidad en el sistema SaaS multi-tenant.
--
-- üéØ PROP√ìSITO:
-- ‚Ä¢ Cat√°logos con datos del sistema + datos por organizaci√≥n
-- ‚Ä¢ Flexibilidad para agregar valores sin migrations
-- ‚Ä¢ Soporte multi-tenant con RLS
-- ‚Ä¢ Soft delete para preservar hist√≥ricos
--
-- üìä CONTENIDO:
-- ‚Ä¢ tipos_bloqueo - Cat√°logo din√°mico de tipos de bloqueo
--
-- üîÑ ORDEN DE EJECUCI√ìN: #4 (despu√©s de ENUMs, antes de tablas operacionales)
-- ====================================================================

-- ====================================================================
-- üé® TABLA TIPOS_BLOQUEO - CAT√ÅLOGO DIN√ÅMICO DE TIPOS DE BLOQUEO
-- ====================================================================
-- Reemplaza el ENUM tipo_bloqueo por un sistema flexible con √≠ndice
-- incremental que permite tipos del sistema + tipos personalizados.
--
-- üéØ CASOS DE USO:
-- ‚Ä¢ Tipos globales del sistema (organizacion_id IS NULL)
-- ‚Ä¢ Tipos personalizados por organizaci√≥n (organizacion_id NOT NULL)
-- ‚Ä¢ Configuraci√≥n de comportamiento (permite_todo_el_dia, etc.)
-- ‚Ä¢ Soft delete para preservar hist√≥ricos
--
-- üé® PRESENTACI√ìN (colores, iconos):
-- ‚Ä¢ Manejados en frontend con constantes
-- ‚Ä¢ Tipos personalizados usan defaults del frontend
--
-- üîÑ RELACI√ìN: Usado por bloqueos_horarios.tipo_bloqueo_id
-- ====================================================================

CREATE TABLE tipos_bloqueo (
    -- üîë IDENTIFICADOR INCREMENTAL
    id SERIAL PRIMARY KEY,

    -- üè¢ MULTI-TENANT (NULL = tipo del sistema global)
    organizacion_id INTEGER REFERENCES organizaciones(id) ON DELETE CASCADE,

    -- üìã IDENTIFICACI√ìN
    codigo VARCHAR(50) NOT NULL,              -- 'vacaciones', 'hora_comida'
    nombre VARCHAR(100) NOT NULL,             -- "Vacaciones", "Hora de Comida"
    descripcion TEXT,

    -- ‚öôÔ∏è CONFIGURACI√ìN DE COMPORTAMIENTO
    es_sistema BOOLEAN DEFAULT false,         -- true = No eliminable, protegido
    permite_todo_el_dia BOOLEAN DEFAULT true,
    permite_horario_especifico BOOLEAN DEFAULT true,
    requiere_aprobacion BOOLEAN DEFAULT false,

    -- üé® UI
    orden_display INTEGER DEFAULT 0,          -- Orden de visualizaci√≥n en selects
    activo BOOLEAN DEFAULT true,              -- Soft delete

    -- üìù METADATOS
    metadata JSONB DEFAULT '{}',              -- Datos adicionales flexibles

    -- üïê TIMESTAMPS AUTOM√ÅTICOS
    creado_en TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    actualizado_en TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ====================================================================
-- üìä √çNDICES ESPECIALIZADOS
-- ====================================================================

-- √çndice √∫nico: c√≥digo por organizaci√≥n (tipos personalizados)
CREATE UNIQUE INDEX idx_tipos_bloqueo_codigo_org_unique
ON tipos_bloqueo (organizacion_id, LOWER(codigo))
WHERE organizacion_id IS NOT NULL AND activo = true;

-- √çndice √∫nico: tipos del sistema (c√≥digo global)
CREATE UNIQUE INDEX idx_tipos_bloqueo_sistema_codigo_unique
ON tipos_bloqueo (LOWER(codigo))
WHERE organizacion_id IS NULL AND activo = true;

-- √çndice para b√∫squedas por organizaci√≥n
CREATE INDEX idx_tipos_bloqueo_organizacion
ON tipos_bloqueo (organizacion_id, activo, orden_display)
WHERE activo = true;

-- ====================================================================
-- ‚úÖ CONSTRAINTS DE VALIDACI√ìN
-- ====================================================================

-- Validaci√≥n de c√≥digo (solo min√∫sculas, n√∫meros y guion bajo)
ALTER TABLE tipos_bloqueo
ADD CONSTRAINT tipos_bloqueo_codigo_valido
CHECK (codigo ~ '^[a-z0-9_]+$');

-- ====================================================================
-- üõ°Ô∏è ROW LEVEL SECURITY (RLS)
-- ====================================================================

ALTER TABLE tipos_bloqueo ENABLE ROW LEVEL SECURITY;

CREATE POLICY tipos_bloqueo_tenant_isolation ON tipos_bloqueo
USING (
    -- Super admin ve todo
    (current_setting('app.current_user_role', true) = 'super_admin') OR
    -- Tipos del sistema visibles para todos
    (organizacion_id IS NULL) OR
    -- Usuarios ven solo tipos de su organizaci√≥n
    (organizacion_id = COALESCE(
        (NULLIF(current_setting('app.current_tenant_id', true), ''))::integer, 0
    )) OR
    -- Bypass para funciones del sistema
    (current_setting('app.bypass_rls', true) = 'true')
)
WITH CHECK (
    -- Super admin puede crear sin restricciones
    (current_setting('app.current_user_role', true) = 'super_admin') OR
    -- Usuarios normales solo pueden crear en su organizaci√≥n
    (organizacion_id = COALESCE(
        (NULLIF(current_setting('app.current_tenant_id', true), ''))::integer, 0
    )) OR
    -- Bypass para funciones del sistema
    (current_setting('app.bypass_rls', true) = 'true')
);

-- ====================================================================
-- üîÑ TRIGGERS AUTOM√ÅTICOS
-- ====================================================================

-- Trigger: Actualizar timestamp autom√°ticamente
CREATE OR REPLACE FUNCTION actualizar_timestamp_tipos_bloqueo()
RETURNS TRIGGER AS $$
BEGIN
    NEW.actualizado_en = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_actualizar_timestamp_tipos_bloqueo
BEFORE UPDATE ON tipos_bloqueo
FOR EACH ROW
EXECUTE FUNCTION actualizar_timestamp_tipos_bloqueo();

-- Trigger: Proteger tipos del sistema
CREATE OR REPLACE FUNCTION proteger_tipos_sistema()
RETURNS TRIGGER AS $$
BEGIN
    IF OLD.es_sistema = true THEN
        -- No eliminar f√≠sicamente
        IF TG_OP = 'DELETE' THEN
            RAISE EXCEPTION 'No se pueden eliminar tipos del sistema. Use soft delete (activo = false) si es necesario.';
        END IF;

        -- No desactivar
        IF TG_OP = 'UPDATE' AND NEW.activo = false THEN
            RAISE EXCEPTION 'No se pueden desactivar tipos del sistema';
        END IF;

        -- No cambiar c√≥digo
        IF TG_OP = 'UPDATE' AND OLD.codigo != NEW.codigo THEN
            RAISE EXCEPTION 'No se puede cambiar el c√≥digo de tipos del sistema';
        END IF;

        -- No cambiar organizacion_id de NULL a NOT NULL
        IF TG_OP = 'UPDATE' AND OLD.organizacion_id IS NULL AND NEW.organizacion_id IS NOT NULL THEN
            RAISE EXCEPTION 'No se puede asignar un tipo del sistema a una organizaci√≥n';
        END IF;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_proteger_tipos_sistema
BEFORE UPDATE OR DELETE ON tipos_bloqueo
FOR EACH ROW
WHEN (OLD.es_sistema = true)
EXECUTE FUNCTION proteger_tipos_sistema();

-- ====================================================================
-- üìä INSERTAR TIPOS DEL SISTEMA (9 tipos base)
-- ====================================================================

INSERT INTO tipos_bloqueo (
    organizacion_id, codigo, nombre, descripcion,
    es_sistema, orden_display,
    permite_todo_el_dia, permite_horario_especifico
) VALUES
-- üîµ Tipos originales del ENUM (7)
(NULL, 'vacaciones', 'Vacaciones', 'Vacaciones programadas del profesional',
 true, 1, true, false),

(NULL, 'feriado', 'Feriado', 'D√≠as feriados nacionales o locales',
 true, 2, true, false),

(NULL, 'mantenimiento', 'Mantenimiento', 'Mantenimiento de equipos o instalaciones',
 true, 3, true, true),

(NULL, 'evento_especial', 'Evento Especial', 'Capacitaciones o seminarios',
 true, 4, true, true),

(NULL, 'emergencia', 'Emergencia', 'Bloqueos de emergencia no planificados',
 true, 5, true, true),

(NULL, 'personal', 'Personal', 'Motivos personales del profesional',
 true, 6, true, true),

(NULL, 'organizacional', 'Organizacional', 'Decisi√≥n administrativa',
 true, 7, true, true),

-- üÜï NUEVOS TIPOS (2) üéâ
(NULL, 'hora_comida', 'Hora de Comida', 'Horario de comida del profesional',
 true, 8, false, true),

(NULL, 'descanso', 'Descanso', 'Per√≠odo de descanso durante la jornada',
 true, 9, false, true);

-- ====================================================================
-- üìù COMENTARIOS DE DOCUMENTACI√ìN
-- ====================================================================

COMMENT ON TABLE tipos_bloqueo IS
'Cat√°logo din√°mico de tipos de bloqueo. Soporta tipos del sistema (globales) y tipos personalizados por organizaci√≥n. Reemplaza el ENUM tipo_bloqueo para flexibilidad multi-tenant. Colores e iconos se manejan en frontend.';

COMMENT ON COLUMN tipos_bloqueo.organizacion_id IS
'NULL = tipo del sistema (visible para todas las organizaciones). NOT NULL = tipo personalizado de la organizaci√≥n';

COMMENT ON COLUMN tipos_bloqueo.es_sistema IS
'true = tipo del sistema, protegido por trigger. No se puede eliminar, desactivar ni modificar el c√≥digo.';

COMMENT ON COLUMN tipos_bloqueo.codigo IS
'C√≥digo √∫nico del tipo (min√∫sculas, n√∫meros, guiones bajos). Usado para mapear colores/iconos en frontend.';

-- ====================================================================
-- ‚úÖ VALIDACI√ìN FINAL
-- ====================================================================

DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables
                   WHERE table_schema = 'public'
                   AND table_name = 'tipos_bloqueo') THEN
        RAISE EXCEPTION 'Error: La tabla tipos_bloqueo no se cre√≥ correctamente';
    END IF;

    RAISE NOTICE '‚úÖ Tabla tipos_bloqueo creada exitosamente';
    RAISE NOTICE '‚úÖ 9 tipos del sistema insertados';
    RAISE NOTICE '‚úÖ √çndices √∫nicos creados';
    RAISE NOTICE '‚úÖ Pol√≠ticas RLS configuradas';
    RAISE NOTICE '‚úÖ Triggers de protecci√≥n activos';
    RAISE NOTICE '‚ÑπÔ∏è  Colores e iconos manejados en frontend';
END $$;

-- ====================================================================
-- üé® TABLA TIPOS_PROFESIONAL - CAT√ÅLOGO DIN√ÅMICO DE TIPOS DE PROFESIONAL
-- ====================================================================
-- Reemplaza el ENUM tipo_profesional por un sistema flexible con √≠ndice
-- incremental que permite tipos del sistema + tipos personalizados.
--
-- üéØ CASOS DE USO:
-- ‚Ä¢ Tipos globales del sistema (organizacion_id IS NULL)
-- ‚Ä¢ Tipos personalizados por organizaci√≥n (organizacion_id NOT NULL)
-- ‚Ä¢ Validaci√≥n de compatibilidad con industrias
-- ‚Ä¢ Soft delete para preservar hist√≥ricos
--
-- üîÑ RELACI√ìN: Usado por profesionales.tipo_profesional_id
-- ====================================================================

CREATE TABLE tipos_profesional (
    id SERIAL PRIMARY KEY,
    organizacion_id INTEGER REFERENCES organizaciones(id) ON DELETE CASCADE,

    -- Identificaci√≥n
    codigo VARCHAR(50) NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,

    -- Clasificaci√≥n
    categoria VARCHAR(50),
    industrias_compatibles TEXT[],

    -- Caracter√≠sticas
    requiere_licencia BOOLEAN DEFAULT false,
    nivel_experiencia_minimo INTEGER DEFAULT 0,

    -- Sistema y personalizaci√≥n
    es_sistema BOOLEAN DEFAULT false,
    icono VARCHAR(50),
    color VARCHAR(7),

    -- Configuraci√≥n
    metadata JSONB DEFAULT '{}',

    -- Control
    activo BOOLEAN DEFAULT true,
    creado_en TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    actualizado_en TIMESTAMP WITH TIME ZONE DEFAULT NOW(),

    -- Constraints
    CONSTRAINT tipos_profesional_codigo_valido CHECK (codigo ~ '^[a-z_]+$'),
    CONSTRAINT tipos_profesional_categoria_valida CHECK (
        categoria IN (
            'barberia', 'salon_belleza', 'estetica', 'spa',
            'podologia', 'medico', 'academia', 'taller_tecnico',
            'fitness', 'veterinaria', 'otro'
        )
    )
);

-- ====================================================================
-- üìä √çNDICES ESPECIALIZADOS
-- ====================================================================

-- √çndice √∫nico: c√≥digo por organizaci√≥n (tipos personalizados)
CREATE UNIQUE INDEX idx_tipos_profesional_codigo_org_unique
ON tipos_profesional (organizacion_id, LOWER(codigo))
WHERE organizacion_id IS NOT NULL AND activo = true;

-- √çndice √∫nico: tipos del sistema (c√≥digo global)
CREATE UNIQUE INDEX idx_tipos_profesional_sistema_codigo_unique
ON tipos_profesional (LOWER(codigo))
WHERE organizacion_id IS NULL AND activo = true;

-- √çndice para b√∫squedas por organizaci√≥n
CREATE INDEX idx_tipos_profesional_organizacion
ON tipos_profesional (organizacion_id, activo, categoria)
WHERE activo = true;

-- √çndice para tipos del sistema
CREATE INDEX idx_tipos_profesional_sistema
ON tipos_profesional (es_sistema, activo)
WHERE es_sistema = true;

-- √çndice para b√∫squedas por categor√≠a
CREATE INDEX idx_tipos_profesional_categoria
ON tipos_profesional (categoria, activo)
WHERE activo = true;

-- √çndice GIN para b√∫squedas en array de industrias
CREATE INDEX idx_tipos_profesional_industrias
ON tipos_profesional USING GIN (industrias_compatibles);

-- ====================================================================
-- üîÑ TRIGGERS AUTOM√ÅTICOS
-- ====================================================================

CREATE OR REPLACE FUNCTION actualizar_timestamp_tipos_profesional()
RETURNS TRIGGER AS $$
BEGIN
    NEW.actualizado_en = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_actualizar_timestamp_tipos_profesional
BEFORE UPDATE ON tipos_profesional
FOR EACH ROW
EXECUTE FUNCTION actualizar_timestamp_tipos_profesional();

-- ====================================================================
-- üõ°Ô∏è TRIGGER DE PROTECCI√ìN DE TIPOS DEL SISTEMA
-- ====================================================================

CREATE OR REPLACE FUNCTION proteger_tipos_profesional_sistema()
RETURNS TRIGGER AS $$
BEGIN
    IF OLD.es_sistema = true THEN
        IF TG_OP = 'DELETE' THEN
            RAISE EXCEPTION 'No se pueden eliminar tipos del sistema. Use soft delete (activo = false) si es necesario.';
        END IF;

        IF TG_OP = 'UPDATE' AND NEW.activo = false THEN
            RAISE EXCEPTION 'No se pueden desactivar tipos del sistema';
        END IF;

        IF TG_OP = 'UPDATE' AND OLD.codigo != NEW.codigo THEN
            RAISE EXCEPTION 'No se puede cambiar el c√≥digo de tipos del sistema';
        END IF;

        IF TG_OP = 'UPDATE' AND OLD.organizacion_id IS NULL AND NEW.organizacion_id IS NOT NULL THEN
            RAISE EXCEPTION 'No se puede asignar un tipo del sistema a una organizaci√≥n';
        END IF;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_proteger_tipos_profesional_sistema
BEFORE UPDATE OR DELETE ON tipos_profesional
FOR EACH ROW
WHEN (OLD.es_sistema = true)
EXECUTE FUNCTION proteger_tipos_profesional_sistema();

-- ====================================================================
-- üõ°Ô∏è ROW LEVEL SECURITY (RLS)
-- ====================================================================

ALTER TABLE tipos_profesional ENABLE ROW LEVEL SECURITY;

CREATE POLICY tipos_profesional_tenant_isolation ON tipos_profesional
USING (
    (current_setting('app.current_user_role', true) = 'super_admin') OR
    (organizacion_id IS NULL) OR
    (organizacion_id = COALESCE(
        (NULLIF(current_setting('app.current_tenant_id', true), ''))::integer, 0
    )) OR
    (current_setting('app.bypass_rls', true) = 'true')
)
WITH CHECK (
    (current_setting('app.current_user_role', true) = 'super_admin') OR
    (organizacion_id = COALESCE(
        (NULLIF(current_setting('app.current_tenant_id', true), ''))::integer, 0
    )) OR
    (current_setting('app.bypass_rls', true) = 'true')
);

-- ====================================================================
-- üìä INSERTAR TIPOS DEL SISTEMA (33 tipos base)
-- ====================================================================

INSERT INTO tipos_profesional (
    organizacion_id, codigo, nombre, descripcion, categoria,
    industrias_compatibles, requiere_licencia, es_sistema, icono, color
) VALUES
-- BARBER√çA (2 tipos)
(NULL, 'barbero', 'Barbero', 'Especialista en cortes y arreglo de cabello masculino', 'barberia',
 ARRAY['barberia'], false, true, 'Scissors', '#8B4513'),
(NULL, 'estilista_masculino', 'Estilista Masculino', 'Estilista especializado en cortes y estilos masculinos', 'barberia',
 ARRAY['barberia', 'salon_belleza'], false, true, 'Scissors', '#A0522D'),

-- SAL√ìN DE BELLEZA (4 tipos)
(NULL, 'estilista', 'Estilista', 'Profesional en cortes, peinados y tratamientos capilares', 'salon_belleza',
 ARRAY['salon_belleza'], false, true, 'Scissors', '#FF69B4'),
(NULL, 'colorista', 'Colorista', 'Especialista en coloraci√≥n y tratamientos de color', 'salon_belleza',
 ARRAY['salon_belleza'], false, true, 'Palette', '#9370DB'),
(NULL, 'manicurista', 'Manicurista', 'Especialista en cuidado de manos y u√±as', 'salon_belleza',
 ARRAY['salon_belleza', 'estetica'], false, true, 'Hand', '#FF1493'),
(NULL, 'peinados_eventos', 'Peinados para Eventos', 'Especialista en peinados para bodas y eventos', 'salon_belleza',
 ARRAY['salon_belleza'], false, true, 'Crown', '#DA70D6'),

-- EST√âTICA Y COSMETOLOG√çA (3 tipos)
(NULL, 'esteticista', 'Esteticista', 'Profesional en tratamientos faciales y corporales', 'estetica',
 ARRAY['estetica', 'spa'], false, true, 'Sparkles', '#FFB6C1'),
(NULL, 'cosmetologo', 'Cosmet√≥logo', 'Especialista en cosmetolog√≠a y tratamientos de piel', 'estetica',
 ARRAY['estetica'], true, true, 'Beaker', '#FF69B4'),
(NULL, 'depilacion_laser', 'Depilaci√≥n L√°ser', 'T√©cnico en depilaci√≥n l√°ser', 'estetica',
 ARRAY['estetica'], true, true, 'Zap', '#FF1493'),

-- SPA Y TERAPIAS (4 tipos)
(NULL, 'masajista', 'Masajista', 'Terapeuta de masajes y relajaci√≥n', 'spa',
 ARRAY['spa', 'estetica'], false, true, 'Hand', '#87CEEB'),
(NULL, 'terapeuta_spa', 'Terapeuta de Spa', 'Profesional en tratamientos de spa', 'spa',
 ARRAY['spa'], false, true, 'Flower', '#B0E0E6'),
(NULL, 'aromaterapeuta', 'Aromaterapeuta', 'Especialista en terapias con aceites esenciales', 'spa',
 ARRAY['spa'], false, true, 'Leaf', '#98FB98'),
(NULL, 'reflexologo', 'Reflex√≥logo', 'Terapeuta de reflexolog√≠a', 'spa',
 ARRAY['spa'], false, true, 'Footprints', '#90EE90'),

-- PODOLOG√çA (2 tipos)
(NULL, 'podologo', 'Pod√≥logo', 'Especialista en cuidado de pies', 'podologia',
 ARRAY['podologia'], true, true, 'Footprints', '#4682B4'),
(NULL, 'asistente_podologia', 'Asistente de Podolog√≠a', 'Asistente en tratamientos podol√≥gicos', 'podologia',
 ARRAY['podologia'], false, true, 'Users', '#5F9EA0'),

-- CONSULTORIO M√âDICO (3 tipos)
(NULL, 'doctor_general', 'Doctor General', 'M√©dico general', 'medico',
 ARRAY['consultorio_medico'], true, true, 'Stethoscope', '#DC143C'),
(NULL, 'enfermero', 'Enfermero', 'Profesional de enfermer√≠a', 'medico',
 ARRAY['consultorio_medico'], true, true, 'HeartPulse', '#FF6347'),
(NULL, 'recepcionista_medica', 'Recepcionista M√©dica', 'Recepcionista en consultorios m√©dicos', 'medico',
 ARRAY['consultorio_medico'], false, true, 'Users', '#FFA07A'),

-- ACADEMIA (3 tipos)
(NULL, 'instructor', 'Instructor', 'Instructor de cursos', 'academia',
 ARRAY['academia'], false, true, 'GraduationCap', '#4169E1'),
(NULL, 'profesor', 'Profesor', 'Profesor de materias', 'academia',
 ARRAY['academia'], false, true, 'Book', '#1E90FF'),
(NULL, 'tutor', 'Tutor', 'Tutor personalizado', 'academia',
 ARRAY['academia'], false, true, 'Users', '#87CEEB'),

-- TALLER T√âCNICO (4 tipos)
(NULL, 'tecnico_auto', 'T√©cnico Automotriz', 'Mec√°nico de veh√≠culos', 'taller_tecnico',
 ARRAY['taller_tecnico'], false, true, 'Wrench', '#696969'),
(NULL, 'tecnico_electronico', 'T√©cnico Electr√≥nico', 'T√©cnico en electr√≥nica', 'taller_tecnico',
 ARRAY['taller_tecnico'], false, true, 'Cpu', '#808080'),
(NULL, 'mecanico', 'Mec√°nico', 'Mec√°nico general', 'taller_tecnico',
 ARRAY['taller_tecnico'], false, true, 'Settings', '#A9A9A9'),
(NULL, 'soldador', 'Soldador', 'T√©cnico en soldadura', 'taller_tecnico',
 ARRAY['taller_tecnico'], false, true, 'Flame', '#C0C0C0'),

-- CENTRO FITNESS (4 tipos)
(NULL, 'entrenador_personal', 'Entrenador Personal', 'Entrenador deportivo personalizado', 'fitness',
 ARRAY['centro_fitness'], false, true, 'Dumbbell', '#FF8C00'),
(NULL, 'instructor_yoga', 'Instructor de Yoga', 'Instructor de yoga y meditaci√≥n', 'fitness',
 ARRAY['centro_fitness'], false, true, 'User', '#32CD32'),
(NULL, 'instructor_pilates', 'Instructor de Pilates', 'Instructor de pilates', 'fitness',
 ARRAY['centro_fitness'], false, true, 'Activity', '#00CED1'),
(NULL, 'nutricionista', 'Nutricionista', 'Especialista en nutrici√≥n', 'fitness',
 ARRAY['centro_fitness', 'consultorio_medico'], true, true, 'Apple', '#228B22'),

-- VETERINARIA (3 tipos)
(NULL, 'veterinario', 'Veterinario', 'M√©dico veterinario', 'veterinaria',
 ARRAY['veterinaria'], true, true, 'Heart', '#8B0000'),
(NULL, 'asistente_veterinario', 'Asistente Veterinario', 'Asistente en medicina veterinaria', 'veterinaria',
 ARRAY['veterinaria'], false, true, 'Users', '#DC143C'),
(NULL, 'groomer', 'Groomer', 'Estilista canino', 'veterinaria',
 ARRAY['veterinaria'], false, true, 'Scissors', '#FF1493'),

-- GEN√âRICO (1 tipo)
(NULL, 'otro', 'Otro', 'Tipo de profesional gen√©rico', 'otro',
 ARRAY['otro', 'academia', 'barberia', 'centro_fitness', 'consultorio_medico', 'estetica', 'podologia', 'salon_belleza', 'spa', 'taller_tecnico', 'veterinaria'],
 false, true, 'User', '#808080');

-- ====================================================================
-- üìù COMENTARIOS DE DOCUMENTACI√ìN
-- ====================================================================

COMMENT ON TABLE tipos_profesional IS
'Cat√°logo din√°mico de tipos de profesional. Soporta tipos del sistema (globales) y tipos personalizados por organizaci√≥n.';

COMMENT ON COLUMN tipos_profesional.organizacion_id IS
'NULL = tipo del sistema (visible para todas las organizaciones). NOT NULL = tipo personalizado de la organizaci√≥n';

COMMENT ON COLUMN tipos_profesional.es_sistema IS
'true = tipo del sistema, protegido por trigger. No se puede eliminar, desactivar ni modificar el c√≥digo.';

COMMENT ON COLUMN tipos_profesional.codigo IS
'C√≥digo √∫nico del tipo (min√∫sculas, guiones bajos). Usado como identificador program√°tico.';

COMMENT ON COLUMN tipos_profesional.industrias_compatibles IS
'Array de industrias donde este tipo es aplicable. Usado para validar compatibilidad con organizacion.tipo_industria.';

-- ====================================================================
-- ‚úÖ VALIDACI√ìN FINAL DE SEED DATA
-- ====================================================================

DO $$
DECLARE
    count_tipos INTEGER;
    count_sistema INTEGER;
BEGIN
    SELECT COUNT(*) INTO count_tipos FROM tipos_profesional;
    SELECT COUNT(*) INTO count_sistema FROM tipos_profesional WHERE es_sistema = true;

    IF count_sistema != 33 THEN
        RAISE EXCEPTION 'Error: Se esperaban 33 tipos del sistema, se encontraron %', count_sistema;
    END IF;

    IF NOT EXISTS (
        SELECT 1 FROM pg_trigger
        WHERE tgname = 'trigger_proteger_tipos_profesional_sistema'
    ) THEN
        RAISE EXCEPTION 'Error: Trigger de protecci√≥n no est√° activo';
    END IF;

    IF NOT EXISTS (
        SELECT 1 FROM pg_tables
        WHERE tablename = 'tipos_profesional' AND rowsecurity = true
    ) THEN
        RAISE EXCEPTION 'Error: RLS no est√° habilitado en tipos_profesional';
    END IF;

    RAISE NOTICE '‚úÖ Tabla tipos_profesional creada exitosamente';
    RAISE NOTICE '‚úÖ % tipos del sistema insertados', count_sistema;
    RAISE NOTICE '‚úÖ √çndices √∫nicos creados correctamente';
    RAISE NOTICE '‚úÖ Pol√≠ticas RLS configuradas';
    RAISE NOTICE '‚úÖ Triggers de protecci√≥n activos';
    RAISE NOTICE '‚úÖ Validaciones completadas sin errores';
END $$;
