meta {
  name: 03 - Login Manager Barber√≠a
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/api/v1/auth/login
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "email": "manager@barbariaelclasico.com",
    "password": "manager123"
  }
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Should login as manager", function() {
    const body = res.getBody();
    expect(body.data.usuario).to.have.property('rol', 'manager');
    expect(body.data.usuario).to.have.property('email', 'manager@barbariaelclasico.com');
  });

  test("Should belong to correct organization", function() {
    const body = res.getBody();
    expect(body.data.usuario.organizacion_id).to.equal(bru.getVar("barbariaOrgId"));
  });

  test("Should set manager token", function() {
    const body = res.getBody();
    if (body.success && body.data.accessToken) {
      bru.setVar("managerBarberiaToken", body.data.accessToken);
    }
  });

  test("Manager authentication successful", function() {
    const body = res.getBody();
    console.log("üîê Login Manager Barber√≠a exitoso");
    console.log(`üë§ Usuario: ${body.data.usuario.nombre} ${body.data.usuario.apellidos}`);
    console.log(`üè¢ Organizaci√≥n: ${body.data.usuario.organizacion_id}`);
    console.log(`‚è∞ √öltimo login: ${new Date().toLocaleString()}`);
    console.log("‚úÖ Token de acceso configurado para operaciones");
  });
}