meta {
  name: 03 - Obtener por ID
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/api/{{apiVersion}}/profesionales/{{profesionalId}}?organizacion_id={{organizacionId}}
  body: none
  auth: bearer
}

params:query {
  organizacion_id: {{organizacionId}}
}

headers {
  Content-Type: application/json
}

auth:bearer {
  token: {{accessToken}}
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Response should contain profesional data", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('profesional');
    const profesional = body.data.profesional;
    expect(profesional).to.have.property('id');
    expect(profesional).to.have.property('nombre_completo');
    expect(profesional).to.have.property('email');
    expect(profesional).to.have.property('tipo_profesional');
  });

  test("Professional ID should match requested ID", function() {
    const body = res.getBody();
    const requestedId = parseInt("{{profesionalId}}");
    expect(body.data.profesional.id).to.equal(requestedId);
  });

  test("Response should include all professional details", function() {
    const body = res.getBody();
    const profesional = body.data.profesional;
    expect(profesional).to.have.property('organizacion_id');
    expect(profesional).to.have.property('especialidades');
    expect(profesional).to.have.property('a√±os_experiencia');
    expect(profesional).to.have.property('activo');
    expect(profesional).to.have.property('disponible_online');
  });
}