{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "20a0b009-eb9b-44fc-bda9-4dffd8085f04",
              "name": "sender",
              "value": "={{ $json.message.from.id }}",
              "type": "string"
            },
            {
              "id": "6076cf73-bc7d-41d6-b053-c09611925c31",
              "name": "conversation",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "35f48ada-3625-40fa-93a4-414fe67cf8c2",
              "name": "sessionId",
              "value": "={{ $json.message.from.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        648
      ],
      "id": "bd7d8f93-23f6-4726-bf9e-ffca99b18226",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://evolution_api:8080/message/sendText/{{ $('Webhook1').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "TuClaveAPIEvolution123!"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.sender.split('@')[0] }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        224
      ],
      "id": "5890f363-8827-4f42-8271-1ab17ec04a7e",
      "name": "HTTP Request",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Redis1').item.json.propertyName.join(\" \") }}",
        "options": {
          "systemMessage": "=Eres BARBERO_BOT, asistente especializado de la Barbería suavecito.\n\nFECHA Y HORA ACTUAL: {{ $now }}\nZONA HORARIA: America/Mexico_City (UTC-6)\n\nINFORMACIÓN DE LA BARBERÍA:\n- BARBEROS: Luis Enrique Arellanes, Diego Torillo\n- HORARIO: Lunes a Sábado de 9:00 a 18:00 (Domingo cerrado)\n- SERVICIOS DISPONIBLES:\n  * Corte (30 minutos) - $150\n  * Corte + Barba (45 minutos) - $250\n  * Solo Barba (20 minutos) - $100\n\nTu trabajo es ayudar a los clientes a agendar citas por redes sociales de manera eficiente.\n\n=== HERRAMIENTAS DISPONIBLES ===\n\nTienes acceso a estas 3 herramientas de Google Sheets:\n\n1. **\"verificar_disponibilidad_barberia\"** - Para leer todas las citas existentes\n2. **\"agendar_nueva_cita\"** - Para insertar nueva cita confirmada  \n3. **\"actualizar_estado_cita\"** - Para cancelar/completar citas\n\n=== FLUJO PRINCIPAL ===\n\n**IMPORTANTE - CONTROL DE CONVERSACIÓN:**\n- SOLO responde al mensaje más reciente o relevante\n- Si hay múltiples saludos consecutivos, responde UNA SOLA VEZ al último\n- Si hay mensajes duplicados o repetitivos, ignora los anteriores y responde solo al más reciente\n- Usa la memoria del hilo de conversación para evitar preguntar información ya proporcionada\n\nCuando recibas un mensaje:\n\n1. **IDENTIFICA EL TIPO DE MENSAJE:**\n   - ¿Quiere agendar una cita nueva?\n   - ¿Quiere cancelar/reagendar?\n   - ¿Pregunta información general?\n   - ¿Confirma horario alternativo?\n   - ¿Solo saluda? (responder UNA VEZ por sesión de saludo)\n\n2. **PARA AGENDAR CITA NUEVA (PROCESO OBLIGATORIO):**\n   \n   **PASO 1:** Extrae y VALIDA todos los datos del mensaje:\n   - Barbero preferido (Luis/Diego, default: Luis Enrique Arellanes)\n   - Fecha (hoy, mañana, día específico) (OBLIGATORIO)\n   - Hora (formato 24hrs) (OBLIGATORIO)\n   - Nombre del cliente (OBLIGATORIO)\n   - Servicio deseado (OBLIGATORIO)\n\n   **PASO 2:** USA \"verificar_disponibilidad_barberia\"\n   - Lee todas las citas para verificar conflictos\n   - Filtra por mismo barbero + misma fecha + Estado=\"Activa\"\n   - Calcula si el horario solicitado está libre\n\n   **PASO 3:** VALIDA DISPONIBILIDAD\n   - Si hay conflicto: sugiere 3 horarios alternativos\n   - Si está libre: procede al Paso 4\n\n   **PASO 4:** USA \"agendar_nueva_cita\" con estos datos:\n   - fecha: \"DD/MM/YYYY\"\n   - hora: \"HH:MM\" \n   - barbero: \"Luis Enrique Arellanes\" o \"Diego Torillo\"\n   - cliente: nombre extraido\n   - servicio: \"Corte\", \"Corte + Barba\", o \"Barba\"\n   - timestamp: fecha+hora en milliseconds\n   - duracion: 30 (Corte), 45 (Corte+Barba), 20 (Barba)\n\n=== CONTROL DE SESIÓN Y MEMORIA ===\n\n**VALIDACIÓN DE MENSAJES:**\n- Mantén el contexto completo de la conversación en memoria\n- Identifica el ÚLTIMO mensaje relevante como punto de interacción actual\n- Para saludos múltiples: responde SOLO UNA VEZ al saludo más reciente\n- Para solicitudes de cita: usa toda la información acumulada en el hilo\n\n**MANEJO DE DUPLICADOS:**\n- Si detectas mensajes idénticos o muy similares consecutivos, procesa SOLO el último\n- Evita respuestas múltiples a la misma intención\n- Usa el historial para no repetir preguntas ya respondidas\n\n**EJEMPLO:**\n- Usuario: \"hola\" \"hola\" \"hola\" → Responder UNA vez: \"¡Hola! ¿En qué puedo ayudarte con tu cita en Barbería Suavecito?\"\n- Usuario ya dio nombre → No volver a preguntar el nombre en la misma sesión"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1752,
        552
      ],
      "id": "1616e97e-534d-434c-bde3-4b963812470e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        1568,
        776
      ],
      "id": "3a124d66-f66a-4df0-ab2f-07d1f0617ce1",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "H8ytwrlf66QWd6dY",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5bc80ec5-b2db-40fe-92b3-67697c82d03a",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "190d1d05-825a-4b52-9077-1dc80ec517d0",
      "name": "Webhook1",
      "webhookId": "5bc80ec5-b2db-40fe-92b3-67697c82d03a",
      "disabled": true
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "HERRAMIENTA: Agendar Nueva Cita Confirmada\n\n  FUNCIÓN: Inserta una nueva cita en Google Sheets después de\n  verificar disponibilidad.\n\n  CUÁNDO USAR: SOLO después de confirmar que el horario está\n  libre con la herramienta \"Verificar Disponibilidad\".\n\n  DATOS REQUERIDOS para insertar:\n  - fecha (DD/MM/YYYY)\n  - hora (HH:MM formato 24hrs)\n  - barbero (\"Luis Enrique Arellanes\" o \"Diego Torillo\")\n  - cliente (nombre completo)\n  - telefono (número WhatsApp)\n  - servicio (\"Corte\", \"Corte + Barba\", o \"Barba\")\n  - timestamp (fecha+hora en milliseconds para ordenamiento)\n  - duracion (30 para Corte, 45 para Corte+Barba, 20 para Barba)\n\n  IMPORTANTE: Siempre calcular timestamp correctamente para\n  mantener orden cronológico.\n\n  EJEMPLO: Para cita \"09/01/2025 14:30\", timestamp =\n  1736445000000",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y",
          "mode": "list",
          "cachedResultName": "Barberia",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Citas_Agendadas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Fecha": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Fecha', ``, 'string') }}",
            "Hora": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Hora', ``, 'string') }}",
            "Barbero": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Barbero', ``, 'string') }}",
            "Cliente": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cliente', ``, 'string') }}",
            "Teléfono": "={{ $('Edit Fields').item.json.sender }}",
            "Servicio": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Servicio', ``, 'string') }}",
            "Estado": "Activa",
            "Notas": "Agendada por whatsApp",
            "Timestamp": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Timestamp', ``, 'string') }}",
            "Duración": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Duraci_n', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Fecha",
              "displayName": "Fecha",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Barbero",
              "displayName": "Barbero",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cliente",
              "displayName": "Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Teléfono",
              "displayName": "Teléfono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Servicio",
              "displayName": "Servicio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estado",
              "displayName": "Estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Notas",
              "displayName": "Notas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Duración",
              "displayName": "Duración",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        1824,
        776
      ],
      "id": "e968ffeb-5d22-4e63-934a-e5dcd885d493",
      "name": "agendar_nueva_cita",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ovfzzLNUvqsxjH0R",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "HERRAMIENTA: Verificar Disponibilidad de Citas\n\n  FUNCIÓN: Lee todas las citas existentes en la barbería para\n  verificar disponibilidad de horarios.\n\n  CUÁNDO USAR: Antes de agendar cualquier cita nueva, úsala\n  para:\n  - Verificar si un horario específico está libre\n  - Buscar horarios disponibles en una fecha\n  - Validar conflictos con citas existentes\n\n  DATOS QUE RETORNA:\n  Columnas: Fecha | Hora | Barbero | Cliente | Teléfono |\n  Servicio | Estado | Notas | Timestamp | Duración\n\n  IMPORTANTE: Solo considera citas con Estado=\"Activa\" para\n  validar disponibilidad.\n\n  EJEMPLO: Si cliente quiere cita \"mañana 2pm con Luis\", usa\n  esta herramienta para verificar si ese horario está libre.",
        "documentId": {
          "__rl": true,
          "value": "1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y",
          "mode": "list",
          "cachedResultName": "Barberia",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Citas_Agendadas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        1952,
        776
      ],
      "id": "d3ef7983-8ef0-4c92-bbc4-f2d3f8f2373a",
      "name": "verificar_disponibilidad_barberia",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ovfzzLNUvqsxjH0R",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "HERRAMIENTA: Actualizar Estado de Cita\n\n  FUNCIÓN: Cambia el estado de una cita existente (cancelar,\n  completar, reagendar).\n\n  CUÁNDO USAR:\n  - Cliente cancela cita\n  - Cliente completa cita\n  - Barbero marca cita como completada\n  - Reagendar (cambiar a \"Cancelada\" la antigua)\n\n  DATOS REQUERIDOS:\n  - row_number: número de fila a actualizar (encontrar con \n  \"Verificar Disponibilidad\")\n  - nuevo_estado: \"Cancelada\", \"Completada\", \"Reagendada\"\n  - notas: motivo del cambio (ej: \"Cancelada por cliente\",\n  \"Servicio completado\")\n\n  PROCESO:\n  1. Primero usar \"Verificar Disponibilidad\" para encontrar la\n  cita\n  2. Identificar row_number de la cita a actualizar\n  3. Actualizar solo Estado y Notas, mantener resto de datos\n\n  ESTADOS VÁLIDOS: \"Activa\", \"Cancelada\", \"Completada\", \n  \"Reagendada\"",
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y",
          "mode": "list",
          "cachedResultName": "Barberia",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Citas_Agendadas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y8ctyXaM0E0qibXl4z0693UFZQwi54xDsmO97PVx7-Y/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('row_number__using_to_match_', ``, 'number') }}",
            "Estado": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Estado', ``, 'string') }}",
            "Notas": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notas', ``, 'string') }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Fecha",
              "displayName": "Fecha",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Barbero",
              "displayName": "Barbero",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Cliente",
              "displayName": "Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Teléfono",
              "displayName": "Teléfono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Servicio",
              "displayName": "Servicio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Estado",
              "displayName": "Estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Notas",
              "displayName": "Notas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Duración",
              "displayName": "Duración",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        2080,
        776
      ],
      "id": "ce47ff26-00f5-4980-a242-5e106a3ecd23",
      "name": "actualizar_estado_cita",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ovfzzLNUvqsxjH0R",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        648
      ],
      "id": "e872ba53-029b-4f1a-9221-78b6b383a4c2",
      "name": "Telegram Trigger",
      "webhookId": "283c4db9-3815-432c-a162-1d6f0909e82d",
      "credentials": {
        "telegramApi": {
          "id": "HNabKLD65krlpf8i",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2288,
        552
      ],
      "id": "e32020bd-ac55-4e40-87bc-d3623a313f53",
      "name": "Send a text message",
      "webhookId": "fae227d9-91cb-4d40-832e-2c2bbb1e5a46",
      "credentials": {
        "telegramApi": {
          "id": "HNabKLD65krlpf8i",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.sender }}",
        "messageData": "={{ $json.conversation }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        448,
        648
      ],
      "id": "2f7f4e4d-f6ae-438d-89b8-29326f218237",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "gUqV6KKVvaBoRg42",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        672,
        648
      ],
      "id": "b71ae138-f2b9-4b12-a212-5ce5c088402f",
      "name": "Wait",
      "webhookId": "ff194028-6953-4cea-9cda-4c009d3a687c"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Redis').item.json.sender }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        896,
        648
      ],
      "id": "fb1e5dcd-f1b0-40ba-bf2e-6e7d10b79d7e",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "gUqV6KKVvaBoRg42",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2d3b75ea-f4d4-4b04-a981-5b6d7ed3c795",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Redis').item.json.conversation }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1120,
        648
      ],
      "id": "c2adc91e-5677-44a1-b8ba-eb353fd04bc1",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1344,
        744
      ],
      "id": "030b6f71-808e-49cc-8fda-14fd998a4dd5",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Redis').item.json.sender }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1344,
        552
      ],
      "id": "cac06cd5-5e12-4435-97e5-dfce33ca3c8a",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "gUqV6KKVvaBoRg42",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Redis').item.json.sender }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1696,
        776
      ],
      "id": "8700d231-930d-499c-b6ff-a122db8aa7a4",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "31UeekgJd9Dxr9eL",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agendar_nueva_cita": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "verificar_disponibilidad_barberia": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "actualizar_estado_cita": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d7b3de4c-d63b-4cf1-890e-ed875d7f1da1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e1ced58e1fd8c7afefe8506d67fc257f88f98993670ec4135680d93bf1535008"
  },
  "id": "5DoxlEovq9xi7ATz",
  "tags": []
}