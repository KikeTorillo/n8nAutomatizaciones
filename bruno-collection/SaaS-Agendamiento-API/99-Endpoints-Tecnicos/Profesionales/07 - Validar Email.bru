meta {
  name: 07 - Validar Email
  type: http
  seq: 7
}

post {
  url: {{baseUrl}}/api/{{apiVersion}}/profesionales/validar-email?organizacion_id={{organizacionId}}
  body: json
  auth: bearer
}

params:query {
  organizacion_id: {{organizacionId}}
}

headers {
  Content-Type: application/json
}

auth:bearer {
  token: {{accessToken}}
}

body:json {
  {
    "email": "nuevo.profesional@barberia-test.com",
    "excluir_id": null
  }
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should contain success true", function() {
    const body = res.getBody();
    expect(body).to.have.property('success', true);
  });

  test("Response should contain validation result", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('email_disponible');
    expect(body.data.email_disponible).to.be.a('boolean');
  });

  test("Response should include checked email", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('email', 'nuevo.profesional@barberia-test.com');
  });

  test("If email is available, should return true", function() {
    const body = res.getBody();
    // This test will pass if email is truly available
    // In a real scenario, you might want to test both cases
    if (body.data.email_disponible) {
      expect(body.data.email_disponible).to.equal(true);
    }
  });
}