{
  "name": "My workflow 4",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ae59cdbc-961a-4f31-b9e5-701b82d25f1c",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -1456,
        112
      ],
      "id": "d1dc3d15-0f8f-413d-be6c-a362eb5d9c61",
      "name": "Webhook",
      "webhookId": "ae59cdbc-961a-4f31-b9e5-701b82d25f1c"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "20a0b009-eb9b-44fc-bda9-4dffd8085f04",
              "name": "sender",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "2763de37-d1d4-4564-9980-eeb091c9afd6",
              "name": "messageType",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "6076cf73-bc7d-41d6-b053-c09611925c31",
              "name": "conversation",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "f7e32389-50f8-4633-913c-6f233ff7656e",
              "name": "sessionId",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1264,
        112
      ],
      "id": "a4a455de-7380-4a0f-a2bf-86ca3e47089c",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "conversations"
        },
        "limit": 10,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('Edit Fields').item.json.sessionId }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "created_at",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1104,
        112
      ],
      "id": "a8dadc81-5c11-4965-86e0-c4b5d9464e73",
      "name": "Get Conversation History",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "YUuD1hpbAIsb6wNj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.deepseek.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer sk-97d949168db0406baf03bb694f14b74a"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "deepseek-chat"
            },
            {
              "name": "messages",
              "value": "={{ \n  [\n    {\n      \"role\": \"system\",\n      \"content\": \"Eres un asistente personal que ayuda a agendar citas. HOY ES: \" + $now.format('yyyy-MM-dd') + \" y son las \" + $now.format('HH:mm') + \". Cuando alguien mencione que quiere agendar una cita con una persona específica y proporcione un correo electrónico, debes usar la herramienta de calendario. Para activar la herramienta, responde con: USE_TOOL: agendar_cita seguido de un JSON con: {\\\"summary\\\": \\\"titulo de la cita\\\", \\\"startTime\\\": \\\"YYYY-MM-DDTHH:mm:ss\\\", \\\"endTime\\\": \\\"YYYY-MM-DDTHH:mm:ss\\\", \\\"description\\\": \\\"descripcion detallada\\\"}. IMPORTANTE: Calcula las fechas basándote en HOY, no uses fechas del pasado como 2023. Si dicen 'mañana' usa la fecha de mañana real.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": $('Edit Fields').item.json.conversation\n    }\n  ]\n}}"
            },
            {
              "name": "max_tokens",
              "value": 1000
            },
            {
              "name": "temperature",
              "value": 0.7
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -944,
        112
      ],
      "id": "132d3df8-e338-43bd-bc47-8d19fc7e8178",
      "name": "DeepSeek API"
    },
    {
      "parameters": {
        "jsCode": "// Procesar respuesta de DeepSeek\nconst response = $input.first().json;\nconst aiResponse = response.choices[0].message.content;\n\n// Verificar si el AI quiere usar una herramienta\nif (aiResponse.includes('USE_TOOL: agendar_cita')) {\n  // Extraer el JSON después de USE_TOOL: agendar_cita (incluyendo saltos de línea)\n  const toolMatch = aiResponse.match(/USE_TOOL: agendar_cita[\\s\\S]*?({[\\s\\S]*?})/);\n  if (toolMatch) {\n    try {\n      const toolData = JSON.parse(toolMatch[1]);\n      return [{\n        json: {\n          useCalendar: true,\n          calendarData: toolData,\n          responseText: `Listo, agendé tu cita '${toolData.summary}' ✅`\n        }\n      }];\n    } catch (e) {\n      return [{\n        json: {\n          useCalendar: false,\n          responseText: aiResponse,\n          error: 'Error parsing tool data: ' + e.message\n        }\n      }];\n    }\n  }\n}\n\n// Respuesta normal sin herramientas\nreturn [{\n  json: {\n    useCalendar: false,\n    responseText: aiResponse\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -784,
        112
      ],
      "id": "7cca0a4e-3a2a-41f7-8287-891613b74cd5",
      "name": "Process AI Response"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "conversations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('Edit Fields').item.json.sessionId }}",
            "role": "user",
            "content": "={{ $('Edit Fields').item.json.conversation }}",
            "created_at": "={{ $('Webhook').item.json.body.date_time }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "role",
              "displayName": "role",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false,
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('Edit Fields').item.json.sessionId }}"
            },
            {
              "column": "role",
              "value": "user"
            },
            {
              "column": "content",
              "value": "={{ $('Edit Fields').item.json.conversation }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -768,
        -128
      ],
      "id": "8d9879fc-1c7f-47ab-8aeb-a9738d2107d1",
      "name": "Save User Message",
      "credentials": {
        "postgres": {
          "id": "YUuD1hpbAIsb6wNj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "conversations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('Edit Fields').item.json.sessionId }}",
            "role": "ia",
            "created_at": "={{ $json.created_at }}",
            "content": "={{ $('Process AI Response').item.json.responseText }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "role",
              "displayName": "role",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false,
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('Edit Fields').item.json.sessionId }}"
            },
            {
              "column": "role",
              "value": "assistant"
            },
            {
              "column": "content",
              "value": "={{ $json.responseText }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -592,
        -128
      ],
      "id": "22a55e3a-52ed-4b47-948a-c2d76f7006d8",
      "name": "Save AI Response",
      "credentials": {
        "postgres": {
          "id": "YUuD1hpbAIsb6wNj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9ced74ca-77fa-4d7a-8b92-5b378e2850d7",
              "leftValue": "={{ $json.useCalendar }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -624,
        112
      ],
      "id": "7a74e8d5-7aae-4f0e-8c83-b3f95401bd3b",
      "name": "If"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "arellanestorillo@gmail.com",
          "mode": "list",
          "cachedResultName": "arellanestorillo@gmail.com"
        },
        "start": "={{ $json.calendarData.startTime }}",
        "end": "={{ $json.calendarData.endTime }}",
        "additionalFields": {
          "description": "={{ $json.calendarData.description }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.2,
      "position": [
        -288,
        48
      ],
      "id": "9ac5f5c1-7c77-40f5-b6b4-966c2f9ad16b",
      "name": "Create Google Calendar Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "IVedjf5oSNuOMwLb",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://evolution_api:8080/message/sendText/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "={{$env.AUTHENTICATION_API_KEY}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.sender.split('@')[0] }}"
            },
            {
              "name": "text",
              "value": "={{ $('Process AI Response').item.json.responseText }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -288,
        272
      ],
      "id": "3e654fbf-4b57-4927-99ba-8b54dc9f3691",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Get Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation History": {
      "main": [
        [
          {
            "node": "DeepSeek API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek API": {
      "main": [
        [
          {
            "node": "Process AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process AI Response": {
      "main": [
        [
          {
            "node": "Save User Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save User Message": {
      "main": [
        [
          {
            "node": "Save AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Google Calendar Event": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create Google Calendar Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3c4542f8-6856-4a6c-a6ec-b4d64a632511",
  "meta": {
    "instanceId": "3befaac49988b9c648ba08e4c625531296a9ea8e4bfc1bb257fdbc966d390514"
  },
  "id": "nv0iMvJJkPETrw0n",
  "tags": []
}