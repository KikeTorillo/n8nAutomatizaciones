meta {
  name: 08 - Unlock User
  type: http
  seq: 8
}

post {
  url: {{baseUrl}}/api/v1/auth/unlock-user
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{accessToken}}
  Content-Type: application/json
}

body:json {
  {
    "userId": 2
  }
}

vars:post-response {
  unlockSuccess: res.body.success
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Should have success property", function() {
    expect(res.getBody()).to.have.property('success');
  });

  test("Should unlock user successfully", function() {
    expect(res.getBody().success).to.be.true;
  });

  test("Should have message", function() {
    expect(res.getBody()).to.have.property('message');
  });

  test("Should require authentication", function() {
    // Este test pasará si el endpoint responde correctamente con token
    expect(res.getStatus()).to.not.equal(401);
  });
}

docs {
  # Desbloquear Usuario

  Este endpoint permite a los administradores desbloquear usuarios que han sido bloqueados por múltiples intentos fallidos de login.

  ## Requisitos:
  - Autenticación: Bearer Token requerido
  - Rol: Administrador o superior
  - Rate Limiting: Operaciones pesadas (más restrictivo)

  ## Parámetros:
  - `userId` (number): ID del usuario a desbloquear

  ## Respuesta Exitosa:
  ```json
  {
    "success": true,
    "message": "Usuario desbloqueado exitosamente",
    "data": {
      "userId": 2,
      "email": "usuario@ejemplo.com",
      "unlocked": true
    }
  }
  ```

  ## Errores Comunes:
  - 401: No autenticado
  - 403: Sin permisos de administrador
  - 404: Usuario no encontrado
  - 400: Usuario no está bloqueado
}